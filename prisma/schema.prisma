generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Beverage {
  id             Int                    @id @default(autoincrement())
  name           String
  canType        String
  availableSizes AvailableSize[]
  bitterness     String
  alcoholContent String
  mainColor      String @default("#FFD700")
  nutrients      NutrientsBeverage[]
  ingredients    IngredientsBeverage[]
  origin         OriginsBeverage[]
  tastingNotes   TastingNotesBeverage[]
  pairing        PairingsBeverage[]
  idealGlass     IdealGlassBeverage[]
}


model AvailableSize {
  id         Int      @id @default(autoincrement())
  image      String
  volume     String
  beverageId Int
  beverage   Beverage @relation(fields: [beverageId], references: [id])
}

model Nutrient {
  id                Int                 @id @default(autoincrement())
  icon              String
  name              String
  NutrientsBeverage NutrientsBeverage[]
}

model NutrientsBeverage {
  id         Int      @id @default(autoincrement())
  nutrientId Int
  beverageId Int
  amount     String
  nutrient   Nutrient @relation(fields: [nutrientId], references: [id])
  beverage   Beverage @relation(fields: [beverageId], references: [id])
}

model Ingredient {
  id                  Int                   @id @default(autoincrement())
  icon                String
  name                String
  IngredientsBeverage IngredientsBeverage[]
}

model IngredientsBeverage {
  id           Int        @id @default(autoincrement())
  ingredientId Int
  beverageId   Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  beverage     Beverage   @relation(fields: [beverageId], references: [id])
}

model Origin {
  id              Int               @id @default(autoincrement())
  icon            String
  name            String
  OriginsBeverage OriginsBeverage[]
}

model OriginsBeverage {
  id         Int      @id @default(autoincrement())
  originId   Int
  beverageId Int
  origin     Origin   @relation(fields: [originId], references: [id])
  beverage   Beverage @relation(fields: [beverageId], references: [id])
}

model TastingNote {
  id                   Int                    @id @default(autoincrement())
  icon                 String
  name                 String
  TastingNotesBeverage TastingNotesBeverage[]
}

model TastingNotesBeverage {
  id            Int         @id @default(autoincrement())
  tastingNoteId Int
  beverageId    Int
  tastingNote   TastingNote @relation(fields: [tastingNoteId], references: [id])
  beverage      Beverage    @relation(fields: [beverageId], references: [id])
}

model Pairing {
  id               Int                @id @default(autoincrement())
  icon             String
  name             String
  PairingsBeverage PairingsBeverage[]
}

model PairingsBeverage {
  id         Int      @id @default(autoincrement())
  pairingId  Int
  beverageId Int
  pairing    Pairing  @relation(fields: [pairingId], references: [id])
  beverage   Beverage @relation(fields: [beverageId], references: [id])
}

model IdealGlass {
  id                 Int                  @id @default(autoincrement())
  icon               String
  name               String
  IdealGlassBeverage IdealGlassBeverage[]
}

model IdealGlassBeverage {
  id           Int        @id @default(autoincrement())
  idealGlassId Int
  beverageId   Int
  idealGlass   IdealGlass @relation(fields: [idealGlassId], references: [id])
  beverage     Beverage   @relation(fields: [beverageId], references: [id])
}
